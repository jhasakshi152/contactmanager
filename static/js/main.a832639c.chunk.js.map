{"version":3,"sources":["Component/Context.js","Component/contacts/Contact.js","Component/contacts/Contacts.js","Component/layout/TextInputGroup.js","Component/contacts/AddContact.js","Component/contacts/EditContact.js","Component/layout/Header.js","Component/pages/About.js","Component/pages/NotFound.js","Component/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","then","res","data","value","this","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","header","branding","href","Headers","propTypes","PropTypes","string","isRequired","Test","title","body","fetch","response","json","App","Header","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.a832639c.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context =React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact =>\r\n                    contact.id !== action.payload)\r\n            };\r\n            case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload,...state.contacts]\r\n            };\r\n            case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(\r\n                    contact =>\r\n                    contact.id == action.payload.id ? \r\n                    (contact = action.payload)\r\n                    : contact\r\n                )\r\n            };\r\n\r\n            default:\r\n                return state;\r\n    }\r\n};\r\n\r\n\r\nexport class Provider extends Component {\r\n    state ={\r\n        contacts: [],\r\n        dispatch: action => \r\n            this.setState(state => reducer(state, action))\r\n        \r\n\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const res = axios.get\r\n        ('https://jsonplaceholder.typicode.com/users')\r\n        .then(res => this.setState({ contacts: res.data }));       \r\n        \r\n    }\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n\r\n            </Context.Provider>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer} from '../Context';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Contact extends Component {\r\n    state={\r\n        showContactInfo: false\r\n    };\r\n\r\n    onDeleteClick = async (id,dispatch) => {\r\n        try{\r\n            \r\n        await axios.delete\r\n        (`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        dispatch({type: 'DELETE_CONTACT',payload: id});\r\n        } catch(e) {\r\n            dispatch({type: 'DELETE_CONTACT',payload: id});\r\n\r\n        }\r\n        \r\n       };\r\n    \r\n    render() {\r\n\r\n        const {id,name,email,phone} = this.props.contact;\r\n        const {showContactInfo}= this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                <h4>{name} {' '}\r\n                 <i onClick={ () => this.setState({showContactInfo:!this.state.showContactInfo})}\r\n\r\n                className=\"fas fa-sort-down\" \r\n                style={{ cursor: 'pointer'}}\r\n                />\r\n                <i className=\"fas fa-times\"style={{ cursor: 'pointer',\r\n                float: 'right' , color:'red'}}\r\n                onClick={this.onDeleteClick.bind(this,id,dispatch)}\r\n                >\r\n                </i>\r\n                <Link to={`contact/edit/${id}`}>\r\n                    <i className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                        cursor: 'pointer',\r\n                        float:'right',\r\n                        color: 'black',\r\n                        marginRight:'1rem'\r\n                    }}>\r\n                        \r\n                    </i>\r\n\r\n                </Link>\r\n\r\n\r\n\r\n                </h4>\r\n                {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Email:\r\n                    {email}</li>\r\n                    <li className=\"list-group-item\">Phone:\r\n                     {phone}</li>\r\n                \r\n                </ul>) : null}\r\n            </div>\r\n                    )\r\n\r\n\r\n                }}\r\n            </Consumer>\r\n\r\n            \r\n        );\r\n    }\r\n}\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n \r\n    \r\n};\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer} from '../Context';\r\n\r\nclass Contacts extends Component {\r\n    \r\n        \r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {contacts} =value;\r\n                    return(\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                               <span className=\"text-danger\">Contact</span> \r\n                            List\r\n                            </h1>\r\n                \r\n                        {contacts.map(contact => (\r\n                           <Contact \r\n                           key={contact.id}\r\n                           contact={contact} \r\n                           \r\n                           />\r\n                        ))}\r\n                    </React.Fragment>\r\n                    )\r\n                }}\r\n\r\n            </Consumer>\r\n        );\r\n\r\n        \r\n    \r\n    }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup =({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n                            <label htmlFor={name}>{label}</label>\r\n                            <input\r\n                            type={type}\r\n                            name={name}\r\n                            className={classnames('form-control form-control-lg', {\r\n                                'is-invalid': error\r\n                            } )}\r\n                            placeholder={placeholder}\r\n                            value={value}\r\n                            onChange={onChange}\r\n                            />\r\n                            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n                        </div>\r\n\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes ={\r\n    label:PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n\r\n};\r\nTextInputGroup.defaultProps={\r\n    type: 'text'\r\n\r\n};\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport {Consumer} from '../Context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state= {\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{}\r\n\r\n    };\r\n\r\n    onSubmit = async (dispatch,e) => {\r\n        e.preventDefault();\r\n\r\n        const {name,email,phone}=this.state;\r\n\r\n        //check for errors\r\n        if(name =='') {\r\n            this.setState({errors: {name:'Name is required'}});\r\n            return;\r\n            \r\n        }\r\n        if(email =='') {\r\n            this.setState({errors: {name:'email is required'}});\r\n            return;\r\n        }\r\n        if(phone =='') {\r\n            this.setState({errors: {name:'phone is required'}});\r\n            return;\r\n        }\r\n\r\n        const newContact ={\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post\r\n        ('https://jsonplaceholder.typicode.com/users',\r\n        newContact);\r\n        dispatch({type: 'ADD_CONTACT',\r\n        payload: res.data});        \r\n        \r\n        //clear state\r\n        this.setState({\r\n            name: '',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n        \r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value});\r\n    \r\n\r\n    render() {\r\n        const { name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                <div className=\"card-header\">AddContact</div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                       \r\n                        <TextInputGroup label=\"Name\"\r\n                        name=\"name\"\r\n                        placeholder=\"Enter Name\"\r\n                        value={name}\r\n                        onChange={this.onChange}\r\n                        error={errors.name}\r\n\r\n                        />\r\n                        <TextInputGroup label=\"email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"Enter email\"\r\n                        value={email}\r\n                        onChange={this.onChange}\r\n                        error={errors.email}\r\n                        />\r\n                        <TextInputGroup label=\"phone\"\r\n                        name=\"phone\"\r\n                        placeholder=\"Enter phone\"\r\n                        value={phone}\r\n                        onChange={this.onChange}\r\n                        error={errors.phone}\r\n                        />\r\n                        \r\n                        <input \r\n                        type=\"submit\" \r\n                        value=\"Add Contact\"\r\n                        className=\"btn btn-light byn-block\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n\r\n\r\n                        \r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport {Consumer} from '../Context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state= {\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{}\r\n\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n\r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch,e) => {\r\n        e.preventDefault();\r\n\r\n        const {name,email,phone}=this.state;\r\n\r\n        //check for errors\r\n        if(name =='') {\r\n            this.setState({errors: {name:'Name is required'}});\r\n            return;\r\n            \r\n        }\r\n        if(email =='') {\r\n            this.setState({errors: {name:'email is required'}});\r\n            return;\r\n        }\r\n        if(phone =='') {\r\n            this.setState({errors: {name:'phone is required'}});\r\n            return;\r\n        }\r\n\r\n        const updContact={\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.put\r\n        (`https://jsonplaceholder.typicode.com/users/${id}`,\r\n        updContact);\r\n\r\n        dispatch({type: 'UPDATE_CONTACT', payload:res.data});\r\n\r\n\r\n\r\n        \r\n        \r\n        //clear state\r\n        this.setState({\r\n            name: '',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n        \r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value});\r\n    \r\n\r\n    render() {\r\n        const { name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                <div className=\"card-header\">EditContact</div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                       \r\n                        <TextInputGroup label=\"Name\"\r\n                        name=\"name\"\r\n                        placeholder=\"Enter Name\"\r\n                        value={name}\r\n                        onChange={this.onChange}\r\n                        error={errors.name}\r\n\r\n                        />\r\n                        <TextInputGroup label=\"email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"Enter email\"\r\n                        value={email}\r\n                        onChange={this.onChange}\r\n                        error={errors.email}\r\n                        />\r\n                        <TextInputGroup label=\"phone\"\r\n                        name=\"phone\"\r\n                        placeholder=\"Enter phone\"\r\n                        value={phone}\r\n                        onChange={this.onChange}\r\n                        error={errors.phone}\r\n                        />\r\n                        \r\n                        <input \r\n                        type=\"submit\" \r\n                        value=\"Update Contact\"\r\n                        className=\"btn btn-light byn-block\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n\r\n\r\n                        \r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst header = props => {\r\n    const { branding } = props;\r\n    return (\r\n       <nav className=\"navbar navbar-expand-sm\r\n       navbar-dark bg-danger mb-3 py-0\">\r\n         <div className=\"container\">\r\n             <a href=\"/\" className=\"navbar-brand\">\r\n             {branding}\r\n            </a>\r\n            <div>\r\n             <ul className=\"navbar-nav mr-auto\">\r\n                 <li className=\"nav-item\">\r\n                     <Link to=\"/\" className=\"nav-link\">\r\n                         <i className=\"fas fa-home\"></i>\r\n                         Home\r\n                     </Link>\r\n                 </li>\r\n                 <li className=\"nav-item\">\r\n                     <Link to=\"/contact/add\" className=\"nav-link\">\r\n                     <i className=\"fas fa-plus\"></i>\r\n                         Add\r\n                     </Link>\r\n                 </li>\r\n                 <li className=\"nav-item\">\r\n                     <Link to=\"/about\" className=\"nav-link\">\r\n                     <i className=\"fas fa-question\"></i>\r\n                         About\r\n                     </Link>\r\n                 </li>\r\n             </ul>\r\n            </div>\r\n         </div>\r\n       </nav>\r\n    );\r\n};\r\n\r\nheader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\nHeaders.propTypes={\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nconst headingStyle = {\r\n    color: 'green' ,\r\n    fontSize: '50px'\r\n};\r\n\r\nexport default header;","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                About Contact Manager</h1>\r\n            <p className=\"lead\">\r\n                Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n            \r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nexport default () =>  {\r\n    return (\r\n        <div>\r\n            <h1 className=\"disply-4\">\r\n                <span className=\"text-danger\">404</span>\r\n                 Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n            \r\n        </div>\r\n    );\r\n};\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n\r\n    state = {\r\n        title:'',\r\n        body:''\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n  .then(response => response.json())\r\n  .then(data => this.setState({\r\n      title: data.title,\r\n      body: data.body\r\n\r\n  })\r\n  );\r\n    }\r\n\r\n    //componentWillMount() {\r\n    //    console.log('componentWillMount...');\r\n    //}\r\n\r\n    //componentDidUpdate() {\r\n    //    console.log('componentDidUpdate...');\r\n    //}\r\n\r\n    //componentWillUpdate() {\r\n    //    console.log('componentWillUpdate...');\r\n    //}\r\n\r\n    //componentWillReceiveProps(nextProps,nextState) {\r\n    //    console.log('componentWillReceiveProps...');\r\n    //}\r\n\r\n    //static getDerivedStateFromProps(nextProps,prevState)\r\n    //{\r\n    //    return {\r\n    //        test: 'something'\r\n    //    };\r\n    //}\r\n\r\n    //getSnapshotBeforeUpdate(prevProps,prevState) {\r\n    //  console.log('getSnapshotsBeforeUpdate...');  \r\n    //}\r\n\r\n\r\n\r\n    render() {\r\n        const {title,body}=this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport {HashRouter as Router,Route,Switch} from 'react-router-dom';\nimport Contacts from './Component/contacts/Contacts';\nimport AddContact from './Component/contacts/AddContact';\nimport EditContact from './Component/contacts/EditContact';\nimport Header from './Component/layout/Header';\nimport About from './Component/pages/About';\nimport NotFound from './Component/pages/NotFound';\nimport Test from './Component/test/Test';\n\nimport { Provider } from './Component/Context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider>\n                <Router>\n                    \n            <div className=\"App\">\n                <Header branding=\"Contact Manager\"/>\n                <div className=\"container\">\n                  <Switch>\n                      <Route exact path=\"/\" component=\n                      {Contacts} />\n                      <Route exact path=\"/contact/add\" component=\n                      {AddContact} />\n                      <Route exact path=\"/contact/edit/:id\" component=\n                      {EditContact} />\n                      <Route exact path=\"/about\" component=\n                      {About} />\n                       <Route exact path=\"/test\" component=\n                      {Test} />\n                      <Route component={NotFound} />\n\n                  </Switch>\n\n                </div>\n                \n                \n            </div>\n            </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}